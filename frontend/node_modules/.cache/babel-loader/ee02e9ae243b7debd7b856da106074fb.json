{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jag\\\\new-bus\\\\seating-bus\\\\frontend\\\\src\\\\components\\\\LoginForm\\\\LoginForm.js\";\nimport { Button, makeStyles, TextField } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport validate from \"validate.js\";\nimport { authActions } from \"../../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst constraints = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: \"is required!\"\n    },\n    email: true\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: \"is required!\"\n    }\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  fields: {\n    margin: theme.spacing(-1),\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: \"100%\"\n  }\n}));\n\nfunction LoginForm(props) {\n  const {\n    login,\n    logout,\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  useEffect(() => {//logout();\n  }, []);\n  useEffect(() => {\n    const errors = validate(formState.values, constraints);\n    setFormState(formState => ({ ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    setFormState(formState => ({ ...formState,\n      values: { ...formState.values,\n        [event.target.name]: event.target.value\n      },\n      touched: { ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    login(formState.values.email, formState.values.password);\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return /*#__PURE__*/_jsxDEV(\"form\", { ...rest,\n    className: clsx(classes.root, className),\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.fields,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        label: \"Email Address\",\n        name: \"email\",\n        value: formState.values.email || \"\",\n        onChange: handleChange,\n        error: hasError(\"email\"),\n        helperText: hasError(\"email\") ? formState.errors.email[0] : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        type: \"password\",\n        variant: \"outlined\",\n        label: \"Password\",\n        name: \"password\",\n        value: formState.values.password || \"\",\n        onChange: handleChange,\n        error: hasError(\"password\"),\n        helperText: hasError(\"password\") ? formState.errors.password[0] : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      type: \"submit\",\n      color: \"secondary\",\n      size: \"large\",\n      disabled: !formState.isValid,\n      className: classes.submitButton,\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\nconst mapStateToProps = null;\nconst mapDispatchToProps = {\n  login: authActions.login,\n  logout: authActions.logout\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["C:/Users/jag/new-bus/seating-bus/frontend/src/components/LoginForm/LoginForm.js"],"names":["Button","makeStyles","TextField","clsx","React","useEffect","useState","connect","validate","authActions","constraints","email","presence","allowEmpty","message","password","useStyles","theme","root","fields","margin","spacing","display","flexWrap","flexGrow","submitButton","marginTop","width","LoginForm","props","login","logout","className","rest","classes","formState","setFormState","isValid","values","touched","errors","handleChange","event","target","name","value","handleSubmit","preventDefault","hasError","field","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { Button, makeStyles, TextField } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport validate from \"validate.js\";\r\nimport { authActions } from \"../../actions\";\r\n\r\nconst constraints = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: \"is required!\" },\r\n    email: true,\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: \"is required!\" },\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  fields: {\r\n    margin: theme.spacing(-1),\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    \"& > *\": {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction LoginForm(props) {\r\n  const { login, logout, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    //logout();\r\n  }, []);\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, constraints);\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {},\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = (event) => {\r\n    setFormState((formState) => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]: event.target.value,\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    login(formState.values.email, formState.values.password);\r\n  };\r\n\r\n  const hasError = (field) =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <form\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <div className={classes.fields}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          value={formState.values.email || \"\"}\r\n          onChange={handleChange}\r\n          error={hasError(\"email\")}\r\n          helperText={hasError(\"email\") ? formState.errors.email[0] : null}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          value={formState.values.password || \"\"}\r\n          onChange={handleChange}\r\n          error={hasError(\"password\")}\r\n          helperText={\r\n            hasError(\"password\") ? formState.errors.password[0] : null\r\n          }\r\n        />\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        color=\"secondary\"\r\n        size=\"large\"\r\n        disabled={!formState.isValid}\r\n        className={classes.submitButton}\r\n      >\r\n        Log In\r\n      </Button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = null;\r\nconst mapDispatchToProps = {\r\n  login: authActions.login,\r\n  logout: authActions.logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n"]},"metadata":{},"sourceType":"module"}