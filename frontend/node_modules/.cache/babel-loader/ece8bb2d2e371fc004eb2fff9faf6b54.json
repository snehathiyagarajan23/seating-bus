{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeaa\\\\OneDrive - Veralto\\\\Desktop\\\\seating-bus\\\\frontend\\\\src\\\\components\\\\Admin\\\\UserManagementPage.jsx\";\n// src/components/Admin/UserManagementPage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport \"./UserManagementPage.css\";\nimport EditUserPopup from \"./EditUserPopup\"; // Import the EditUserPopup component\n\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserManagementPage = () => {\n  const [users, setUsers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10); // Number of items to display per page\n\n  const [showEditPopup, setShowEditPopup] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [userToDelete, setUserToDelete] = useState(null);\n  const [filterRole, setFilterRole] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  var currentUsers;\n  useEffect(() => {\n    async function fetchData() {\n      console.log(\"Useeffect\");\n      const server_response = await axios.get(\"http://localhost:3000/admin/get-users\");\n      setUsers(server_response.data.users);\n      currentUsers = users.slice(indexOfFirstItem, indexOfLastItem);\n    }\n\n    fetchData(); // .then((server_response)=>{\n    //   setUsers(server_response.data.users);\n    // })\n    // .catch((err)=>{\n    //   console.log(\"Error in UseEffect used in UserManagement\");\n    //   console.log(err);\n    // })\n  }, []); // Calculate the index of the last item to display on the current page\n\n  const indexOfLastItem = currentPage * itemsPerPage; // Calculate the index of the first item to display on the current page\n\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage; // Get the current page of users\n  // Pagination functions\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const nextPage = () => setCurrentPage(prevPage => prevPage + 1);\n\n  const prevPage = () => setCurrentPage(prevPage => prevPage - 1);\n\n  const handleEditUser = user => {\n    setSelectedUser(user);\n    setShowEditPopup(true);\n  };\n\n  const handleSaveUser = editedUser => {\n    // Save edited user details to the backend (to be implemented later)\n    // For now, update the user in the local state\n    setUsers(prevUsers => prevUsers.map(u => u.id === editedUser.id ? editedUser : u));\n    setShowEditPopup(false);\n  };\n\n  const handleCancelEdit = () => {\n    setShowEditPopup(false);\n  };\n\n  const handleDeleteUser = user => {\n    setUserToDelete(user);\n    setShowDeleteConfirmation(true);\n  };\n\n  const confirmDelete = () => {\n    // Delete the user from the local state\n    setUsers(prevUsers => prevUsers.filter(u => u.id !== userToDelete.id));\n    setShowDeleteConfirmation(false);\n  };\n\n  const cancelDelete = () => {\n    setShowDeleteConfirmation(false);\n  };\n\n  const togglePasswordVisibility = user => {\n    // Toggle password visibility for the selected user\n    const updatedUsers = users.map(u => {\n      if (u.id === user.id) {\n        return { ...u,\n          passwordVisible: !u.passwordVisible\n        };\n      }\n\n      return u;\n    });\n    setUsers(updatedUsers);\n  }; // const filterUsersByRole = (role) => {\n  //   setFilterRole(role);\n  // };\n  // const clearFilter = () => {\n  //   setFilterRole(\"\");\n  // };\n\n\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n  };\n\n  const clearSearch = () => {\n    setSearchTerm(\"\");\n  }; // const filteredUsers = users.filter((user) => {\n  //   return (\n  //     (!filterRole || user.role === filterRole) &&\n  //     Object.values(user).some((value) =>\n  //       String(value).toLowerCase().includes(searchTerm.toLowerCase())\n  //     )\n  //   );\n  // });\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterRole // onChange={(e) => filterUsersByRole(e.target.value)}\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DevOps\",\n            children: \"DevOps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"TechOps\",\n            children: \"TechOps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: handleSearch,\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"content-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentUsers ? currentUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditUser(user),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteUser(user),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 7\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 5\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 1,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), Array.from({\n        length: Math.ceil(users.length / itemsPerPage)\n      }).map((number, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(index + 1),\n        className: currentPage === index + 1 ? \"active\" : \"\",\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage === Math.ceil(users.length / itemsPerPage),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), showEditPopup && /*#__PURE__*/_jsxDEV(EditUserPopup, {\n      user: selectedUser,\n      onSave: handleSaveUser,\n      onCancel: handleCancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), showDeleteConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-confirmation\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete this user?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: confirmDelete,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelDelete,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\nexport default UserManagementPage; // Fetch users from the backend (to be implemented later)\n// For now, use static data\n// const staticUsers = [\n//   {\n//     id: 1,\n//     firstName: \"Sriram\",\n//     lastName: \"Venkatraman\",\n//     email: \"sriramv@esko.com\",\n//     role: \"DevOps\",\n//   },\n//   {\n//     id: 2,\n//     firstName: \"Surya\",\n//     lastName: \"Thondimuthu\",\n//     email: \"suryat@esko.com\",\n//     role: \"DevOps\",\n//   },\n//   {\n//     id: 3,\n//     firstName: \"Sneha\",\n//     lastName: \"Thiyagarajan\",\n//     email: \"snehat@esko.com\",\n//     role: \"DevOps\",\n//   },\n//   {\n//     id: 4,\n//     firstName: \"JegaVarsan\",\n//     lastName: \"AnnaThurai\",\n//     email: \"jegavarsan@esko.com\",\n//     role: \"TechOps\",\n//   },\n//   {\n//     id: 5,\n//     firstName: \"Chaarvika\",\n//     lastName: \"Arunachalam\",\n//     email: \"chaarvika@esko.com\",\n//     role: \"TechOps\",\n//   },\n//   {\n//     id: 6,\n//     firstName: \"Jaivignesh\",\n//     lastName: \"GK\",\n//     email: \"jv@esko.com\",\n//     role: \"DevOps\",\n//   },\n//   {\n//     id: 7,\n//     firstName: \"Harsh\",\n//     lastName: \"Patel\",\n//     email: \"harsh@esko.com\",\n//     role: \"TechOps\",\n//   },\n//   {\n//     id: 8,\n//     firstName: \"NaveenKumar\",\n//     lastName: \"RR\",\n//     email: \"naveen@esko.com\",\n//     role: \"TechOps\",\n//   },\n//   {\n//     id: 9,\n//     firstName: \"Uva\",\n//     lastName: \"Roobini\",\n//     email: \"uva@esko.com\",\n//     role: \"DevOps\",\n//   },\n//   {\n//     id: 10,\n//     firstName: \"Lakshana\",\n//     lastName: \"Sivakumar\",\n//     email: \"lakshana@esko.com\",\n//     role: \"TechOps\",\n//   },\n//   {\n//     id: 11,\n//     firstName: \"Kevin\",\n//     lastName: \"Marshal\",\n//     email: \"kevin@esko.com\",\n//     role: \"DevOps\",\n//   },\n//   {\n//     id: 12,\n//     firstName: \"Jane\",\n//     lastName: \"Smith\",\n//     email: \"jane@esko.com\",\n//     role: \"TechOps\",\n//   },\n//   {\n//     id: 13,\n//     firstName: \"Mark\",\n//     lastName: \"Henry\",\n//     email: \"markhenry@esko.com\",\n//     role: \"DevOps\",\n//   },\n//   // Add more static user data as needed\n// ];\n// setUsers(staticUsers);","map":{"version":3,"sources":["C:/Users/jeaa/OneDrive - Veralto/Desktop/seating-bus/frontend/src/components/Admin/UserManagementPage.jsx"],"names":["React","useState","useEffect","EditUserPopup","axios","UserManagementPage","users","setUsers","currentPage","setCurrentPage","itemsPerPage","showEditPopup","setShowEditPopup","selectedUser","setSelectedUser","showDeleteConfirmation","setShowDeleteConfirmation","userToDelete","setUserToDelete","filterRole","setFilterRole","searchTerm","setSearchTerm","currentUsers","fetchData","console","log","server_response","get","data","slice","indexOfFirstItem","indexOfLastItem","paginate","pageNumber","nextPage","prevPage","handleEditUser","user","handleSaveUser","editedUser","prevUsers","map","u","id","handleCancelEdit","handleDeleteUser","confirmDelete","filter","cancelDelete","togglePasswordVisibility","updatedUsers","passwordVisible","handleSearch","e","target","value","clearSearch","firstName","lastName","email","role","Array","from","length","Math","ceil","number","index"],"mappings":"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","sourcesContent":["// src/components/Admin/UserManagementPage.jsx\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./UserManagementPage.css\";\r\nimport EditUserPopup from \"./EditUserPopup\"; // Import the EditUserPopup component\r\nimport axios from \"axios\";\r\n\r\nconst UserManagementPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10); // Number of items to display per page\r\n  const [showEditPopup, setShowEditPopup] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n  const [userToDelete, setUserToDelete] = useState(null);\r\n  const [filterRole, setFilterRole] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  var currentUsers;\r\n\r\n  useEffect(() => {\r\n    \r\n    async function fetchData() {\r\n      console.log(\"Useeffect\")\r\n      const server_response=await axios.get(\"http://localhost:3000/admin/get-users\");\r\n      setUsers(server_response.data.users);\r\n      currentUsers= users.slice(indexOfFirstItem, indexOfLastItem);\r\n    }\r\n    fetchData();\r\n    \r\n\r\n    // .then((server_response)=>{\r\n    //   setUsers(server_response.data.users);\r\n    // })\r\n    // .catch((err)=>{\r\n    //   console.log(\"Error in UseEffect used in UserManagement\");\r\n    //   console.log(err);\r\n    // })\r\n\r\n  }, []);\r\n\r\n  // Calculate the index of the last item to display on the current page\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  // Calculate the index of the first item to display on the current page\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  // Get the current page of users\r\n   \r\n\r\n  // Pagination functions\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n  const nextPage = () => setCurrentPage((prevPage) => prevPage + 1);\r\n  const prevPage = () => setCurrentPage((prevPage) => prevPage - 1);\r\n\r\n  const handleEditUser = (user) => {\r\n    setSelectedUser(user);\r\n    setShowEditPopup(true);\r\n  };\r\n\r\n  const handleSaveUser = (editedUser) => {\r\n    // Save edited user details to the backend (to be implemented later)\r\n    // For now, update the user in the local state\r\n    setUsers((prevUsers) =>\r\n      prevUsers.map((u) => (u.id === editedUser.id ? editedUser : u))\r\n    );\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  const handleDeleteUser = (user) => {\r\n    setUserToDelete(user);\r\n    setShowDeleteConfirmation(true);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    // Delete the user from the local state\r\n    setUsers((prevUsers) => prevUsers.filter((u) => u.id !== userToDelete.id));\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n\r\n  const togglePasswordVisibility = (user) => {\r\n    // Toggle password visibility for the selected user\r\n    const updatedUsers = users.map((u) => {\r\n      if (u.id === user.id) {\r\n        return { ...u, passwordVisible: !u.passwordVisible };\r\n      }\r\n      return u;\r\n    });\r\n    setUsers(updatedUsers);\r\n  };\r\n\r\n  // const filterUsersByRole = (role) => {\r\n  //   setFilterRole(role);\r\n  // };\r\n\r\n  // const clearFilter = () => {\r\n  //   setFilterRole(\"\");\r\n  // };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setSearchTerm(\"\");\r\n  };\r\n\r\n  // const filteredUsers = users.filter((user) => {\r\n  //   return (\r\n  //     (!filterRole || user.role === filterRole) &&\r\n  //     Object.values(user).some((value) =>\r\n  //       String(value).toLowerCase().includes(searchTerm.toLowerCase())\r\n  //     )\r\n  //   );\r\n  // });\r\n\r\n  return (\r\n    <div className=\"user-management-container\">\r\n      <h2>User Management</h2>\r\n      <div className=\"filter-container\">\r\n        <div className=\"filter-select\">\r\n          <select\r\n            value={filterRole}\r\n            // onChange={(e) => filterUsersByRole(e.target.value)}\r\n          >\r\n            <option value=\"\">All Roles</option>\r\n            <option value=\"DevOps\">DevOps</option>\r\n            <option value=\"TechOps\">TechOps</option>\r\n            {/* Add more role options as needed */}\r\n          </select>\r\n          <button\r\n          //  onClick={clearFilter}\r\n           >Clear</button>\r\n        </div>\r\n        <div className=\"search-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            placeholder=\"Search...\"\r\n          />\r\n          <button \r\n          // onClick={clearSearch}\r\n          >Clear</button>\r\n        </div>\r\n      </div>\r\n      <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n  {currentUsers?currentUsers.map((user) => (\r\n    <tr key={user.id}>\r\n      <td>{user.id}</td>\r\n      <td>{user.firstName}</td>\r\n      <td>{user.lastName}</td>\r\n      <td>{user.email}</td>\r\n      <td>{user.role}</td>\r\n      <td>\r\n        <button onClick={() => handleEditUser(user)}>Edit</button>\r\n        <button onClick={() => handleDeleteUser(user)}>Delete</button>\r\n      </td>\r\n    </tr>\r\n  )):null}\r\n</tbody>\r\n\r\n      </table>\r\n\r\n      {/* Pagination */}\r\n      <div className=\"pagination\">\r\n        <button onClick={prevPage} disabled={currentPage === 1}>\r\n          Previous\r\n        </button>\r\n        {/* Render page numbers */}\r\n        {Array.from({ length: Math.ceil(users.length / itemsPerPage) }).map(\r\n          (number, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => paginate(index + 1)}\r\n              className={currentPage === index + 1 ? \"active\" : \"\"}\r\n            >\r\n              {index + 1}\r\n            </button>\r\n          )\r\n        )}\r\n        <button\r\n          onClick={nextPage}\r\n          disabled={currentPage === Math.ceil(users.length / itemsPerPage)}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n\r\n      {/* Render edit user popup if showEditPopup is true */}\r\n      {showEditPopup && (\r\n        <EditUserPopup\r\n          user={selectedUser}\r\n          onSave={handleSaveUser}\r\n          onCancel={handleCancelEdit}\r\n        />\r\n      )}\r\n      {/* Render delete confirmation popup if showDeleteConfirmation is true */}\r\n      {showDeleteConfirmation && (\r\n        <div className=\"delete-confirmation\">\r\n          <p>Are you sure you want to delete this user?</p>\r\n          <button onClick={confirmDelete}>Yes</button>\r\n          <button onClick={cancelDelete}>No</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagementPage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Fetch users from the backend (to be implemented later)\r\n    // For now, use static data\r\n    // const staticUsers = [\r\n    //   {\r\n    //     id: 1,\r\n    //     firstName: \"Sriram\",\r\n    //     lastName: \"Venkatraman\",\r\n    //     email: \"sriramv@esko.com\",\r\n    //     role: \"DevOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 2,\r\n    //     firstName: \"Surya\",\r\n    //     lastName: \"Thondimuthu\",\r\n    //     email: \"suryat@esko.com\",\r\n    //     role: \"DevOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 3,\r\n    //     firstName: \"Sneha\",\r\n    //     lastName: \"Thiyagarajan\",\r\n    //     email: \"snehat@esko.com\",\r\n\r\n    //     role: \"DevOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 4,\r\n    //     firstName: \"JegaVarsan\",\r\n    //     lastName: \"AnnaThurai\",\r\n    //     email: \"jegavarsan@esko.com\",\r\n\r\n    //     role: \"TechOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 5,\r\n    //     firstName: \"Chaarvika\",\r\n    //     lastName: \"Arunachalam\",\r\n    //     email: \"chaarvika@esko.com\",\r\n\r\n    //     role: \"TechOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 6,\r\n    //     firstName: \"Jaivignesh\",\r\n    //     lastName: \"GK\",\r\n    //     email: \"jv@esko.com\",\r\n\r\n    //     role: \"DevOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 7,\r\n    //     firstName: \"Harsh\",\r\n    //     lastName: \"Patel\",\r\n    //     email: \"harsh@esko.com\",\r\n\r\n    //     role: \"TechOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 8,\r\n    //     firstName: \"NaveenKumar\",\r\n    //     lastName: \"RR\",\r\n    //     email: \"naveen@esko.com\",\r\n\r\n    //     role: \"TechOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 9,\r\n    //     firstName: \"Uva\",\r\n    //     lastName: \"Roobini\",\r\n    //     email: \"uva@esko.com\",\r\n\r\n    //     role: \"DevOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 10,\r\n    //     firstName: \"Lakshana\",\r\n    //     lastName: \"Sivakumar\",\r\n    //     email: \"lakshana@esko.com\",\r\n\r\n    //     role: \"TechOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 11,\r\n    //     firstName: \"Kevin\",\r\n    //     lastName: \"Marshal\",\r\n    //     email: \"kevin@esko.com\",\r\n\r\n    //     role: \"DevOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 12,\r\n    //     firstName: \"Jane\",\r\n    //     lastName: \"Smith\",\r\n    //     email: \"jane@esko.com\",\r\n\r\n    //     role: \"TechOps\",\r\n    //   },\r\n    //   {\r\n    //     id: 13,\r\n    //     firstName: \"Mark\",\r\n    //     lastName: \"Henry\",\r\n    //     email: \"markhenry@esko.com\",\r\n\r\n    //     role: \"DevOps\",\r\n    //   },\r\n    //   // Add more static user data as needed\r\n    // ];\r\n    // setUsers(staticUsers);"]},"metadata":{},"sourceType":"module"}